<?php

/**
 * @file
 * Ubercart Paymill Integration module.
 *
 * Created by: Topsitemakers
 * http://www.topsitemakers.com/
 */

/**
 * Constants used in the module.
 */
// Paymill API endpoint; this will be used as a default in case the user did
// not enter a new one in the admin.
define('UC_PAYMILL_API', 'https://api.paymill.de/v2/');
// URL to the Paymill JS bridge.
define('UC_PAYMILL_BRIDGE', 'https://bridge.paymill.com/');
// Test/live statuses.
define('UC_PAYMILL_TEST', 'test');
define('UC_PAYMILL_LIVE', 'live');

/**
 * Implements hook_uc_payment_method().
 */
function uc_paymill_uc_payment_method() {
  $methods['paymill'] = array(
    'name' => t('Paymill'),
    'title' => t('Credit card via Paymill'),
    'review' => t('Credit card'),
    'callback' => 'uc_payment_method_paymill',
    'redirect' => 'uc_paymill_checkout_form',
    'weight' => 5,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );

  return $methods;
}

/**
 * Form - adds the Paymill checkout form for finalizing the order.
 */
function uc_paymill_checkout_form($form, &$form_state) {
  $form['placeholder']['#markup'] = t('Element placeholder.');

  return $form;
}

/**
 * Checkout callback form, called when the user selects this payment type.
 */
function uc_payment_method_paymill($op, &$order, $form = NULL, &$form_state = NULL) {
  switch ($op) {
    case 'cart-details':
      break;
    case 'cart-process':
      break;
    case 'settings':
      break;
  }
}

/**
 * Decrypts secure data for using Paymill API.
 */
function _uc_paymill_secure_data() {
  static $data;

  if (!empty($data)) {
    return $data;
  }

  // Get encrypted values.
  $api_live_key = variable_get('uc_paymill_api_private_live_key', FALSE);
  $api_test_key = variable_get('uc_paymill_api_private_test_key', FALSE);

  // If CC encryption has been configured properly, decrypt the values.
  if ($key = uc_credit_encryption_key()) {
    // Setup our encryption object.
    $crypt = new UbercartEncryption();

    // Decrypt the secret live key.
    if (!empty($api_live_key)) {
      $api_live_key = $crypt->decrypt($key, $api_live_key);
    }
    // Decrypt the private test key.
    if (!empty($api_test_key)) {
      $api_test_key = $crypt->decrypt($key, $api_test_key);
    }

    // Store any errors.
    uc_store_encryption_errors($crypt, 'uc_paymill');
  }

  $data = array(
    'api_private_live_key' => $api_live_key,
    'api_private_test_key' => $api_test_key,
  );

  return $data;
}

/**
 * Implements hook_libraries_info().
 */
function uc_paymill_libraries_info() {
  $libraries['paymill'] = array(
    'name' => 'Paymill',
    'vendor' => 'http://www.paymill.com/',
    'download_url' => 'https://github.com/paymill/paymill-php/archive/master.zip',
    'path' => 'lib/Services/Paymill',
    'version arguments' => array(
      'file' => 'lib/Services/Paymill/Apiclient/Curl.php',
      'pattern' => '@Paymill-php/([0-9\.]+)@',
      'lines' => 60,
    ),
    'files' => array(
      'php' => array(
        'Clients.php',
        'Coupons.php',
        'Exception.php',
        'Offers.php',
        'Payments.php',
        'Refunds.php',
        'Subscriptions.php',
        'Transactions.php',
      ),
    ),
  );

  return $libraries;
}
