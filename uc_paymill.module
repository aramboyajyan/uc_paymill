<?php

/**
 * @file
 * Ubercart Paymill Integration module.
 *
 * Created by: Topsitemakers
 * http://www.topsitemakers.com/
 */

/**
 * Constants used in the module.
 */
// Paymill API endpoint; this will be used as a default in case the user did
// not enter a new one in the admin.
define('UC_PAYMILL_API', 'https://api.paymill.de/v2/');
// URL to the Paymill JS bridge.
define('UC_PAYMILL_BRIDGE', 'https://bridge.paymill.com/');
// Default description text sent over to Paymill for each order.
define('UC_PAYMILL_DESCRIPTION_PATTERN', 'Payment processed through the [site-name] website.');

/**
 * Implements hook_uc_payment_gateway().
 */
function uc_paymill_uc_payment_gateway() {
  $gateways['paymill'] = array(
    'title' => t('Paymill'),
    'description' => t('Process credit card payments using the Paymill API.'),
    'settings' => 'uc_paymill_settings_form',
    'credit' => 'uc_paymill_charge',
  );

  return $gateways;
}

/**
 * Callback for payment gateway settings.
 */
function uc_paymill_settings_form($form, &$form_state) {}

/**
 * Main handler for processing credit card transactions.
 */
function uc_paymill_charge($order_id, $amount, $data) {
  return array(
    'success' => TRUE,
    'comment' => 'Comment',
    'message' => 'Message',
    'uid'     => 1,
  );
}

/**
 * Implements hook_libraries_info().
 */
function uc_paymill_libraries_info() {
  $libraries['paymill'] = array(
    'name' => 'Paymill',
    'vendor' => 'http://www.paymill.com/',
    'download_url' => 'https://github.com/paymill/paymill-php/archive/master.zip',
    'path' => 'lib/Services/Paymill',
    'version arguments' => array(
      'file' => 'lib/Services/Paymill/Apiclient/Curl.php',
      'pattern' => '@Paymill-php/([0-9\.]+)@',
      'lines' => 60,
    ),
    'files' => array(
      'php' => array(
        'Clients.php',
        'Coupons.php',
        'Exception.php',
        'Offers.php',
        'Payments.php',
        'Refunds.php',
        'Subscriptions.php',
        'Transactions.php',
      ),
    ),
  );

  return $libraries;
}

/**
 * Helper function - show a human readable message about Paymill error.
 */
function _uc_paymill_get_error_text($code) {
  switch ($code) {
    case 'internal_server_error':
      return t('Communication with Paymill failed.');

    case 'invalid_public_key':
      return t('Invalid public key.');

    case 'unknown_error':
      return t('Unknown error.');

    case '3ds_cancelled':
      return t('User cancelled 3D security password entry.');

    case 'field_invalid_card_number':
      return t('Missing or invalid credit card number.');

    case 'field_invalid_card_exp_year':
      return t('Missing or invalid expiry year.');

    case 'field_invalid_card_exp_month':
      return t('Missing or invalid expiry month.');

    case 'field_invalid_card_exp':
      return t('Card has expired.');

    case 'field_invalid_card_cvc':
      return t('Missing or invalid checking number.');

    case 'field_invalid_card_holder':
      return t('Missing or invalid cardholder name.');

    case 'field_invalid_account_number':
      return t('Missing or invalid bank account number.');

    case 'field_invalid_account_holder':
      return t('Missing or invalid bank account holder.');

    case 'field_invalid_bank_code':
      return t('Missing or invalid zip code.');

    default:
      return str_replace('_', ' ', $code);
  }
}
